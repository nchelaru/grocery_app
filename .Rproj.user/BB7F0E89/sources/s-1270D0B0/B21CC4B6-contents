library(knitr)
library(httr)
library(RCurl)
library(xml2)
library(jsonlite)
library(tidyr)
library(DTedit)
library(magrittr)
library(V8)
library(plyr)
library(dplyr)
library(shiny)



get_flyer <- function(search_term) {
  res <- GET(sprintf("https://backflipp.wishabi.com/flipp/items/search?locale=en-ca&postal_code=M4Y2W4&q=%s&limit=1000", search_term))
  
  res_text <- content(res, "text")
  
  res_json <- fromJSON(res_text, flatten = TRUE)
    
  return(res_json)
}


parse_flyer <- function(res_json) {
  filtered_data <- res_json$items
  
  filtered_data <- filtered_data %>%
    select(clipping_image_url, merchant_name, name, valid_to, valid_from)
  
  filtered_data$valid_from <- format(as.Date(filtered_data$valid_from), "%b %d")
  filtered_data$valid_to <- format(as.Date(filtered_data$valid_to), "%b %d")
  
  filtered_data[is.na(filtered_data)] <- ""
  
  filtered_data <- filtered_data[order(filtered_data$merchant_name), ]
  
  return(filtered_data)
}


unique_stores <- function(search_term) {
  res_json <- get_flyer(search_term)
  filtered_data <- parse_flyer(res_json)
  stores <- unique(filtered_data$merchant_name)
  return(stores)
}


card <- function(.img, item, store, valid_from, valid_to) {
  HTML(
    paste0(
      '<div class="card">
      <div class="container">
      <h5><b>',
      item,
      '</b></h5>
      </div>
      <center><img src="',
      .img,
      '" style="width:100%"></center>
      <div class="container">
      <h4><b>', store, '</b></h4>
      <p><i>', valid_from, ' - ', valid_to, '</i></p>
      </div>
      </div>'
    )
  )
}

create_grid <- function(session, search_term) {
  res_json <- get_flyer(search_term)
  
  if (length(res_json$items) == 0) {
    output$cards <-  renderText(HTML("<br><br><center><h2>Oops, the flyer is currently unavailable!</h2></center>"))
    
  } else {
    filtered_data <- parse_flyer(res_json)
  
    
    updateTabItems(session, "tabs", "flyers")
    
    cards <- renderUI({
      # First make the cards
      args <-
        lapply(1:dim(filtered_data)[1], function(x)
          card(filtered_data[x, "clipping_image_url"],
               store = filtered_data[x, "merchant_name"],
               item = filtered_data[x, "name"],
               valid_from = filtered_data[x, "valid_from"],
               valid_to = filtered_data[x, "valid_to"]))
      
      num <- dim(filtered_data)[1]
      
      
      if (num %% 4 == 0) {
        num2 <- num / 4
        
        num3 <- num2 -1
        
        cols <-
          lapply(seq(num2, num2*4, num2), function(x) {
            column(width = 3, verticalLayout(args[(x - num3):x], fluid = TRUE))
          })
      } else {
        num2 <- num %/% 4 + 1
        
        cols <-
          lapply(seq(num2, num2*4, num2), function(x) {
            column(width = 3, verticalLayout(args[(x - num%/%4):x], fluid = TRUE))
          })
      }
      
      
      # basically the same as flowLayout(cards[[1]], cards[[2]],...)
      do.call(shiny::fluidRow, cols)
    })
    
    return(cards)
  }
}